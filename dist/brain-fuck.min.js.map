{"version":3,"sources":["../node_modules/process/browser.js","src/performance-now.coffee","constants/index.js","utils/jump.js","brain-fuck.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","MAX_CHAR_VALUE","EXTEND_SIZE","MEM_SIZE","jumpForward","program","_iptr","openBracketsCount","iptr","jumpBackward","closeBracketsCount","BrainFuck","input","memory","fill","output","mptr","infinite","inputPtr","t1","val","Math","ceil","String","fromCharCode","charCodeAt","t2","compilationTime"],"mappings":"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","file":"brain-fuck.min.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","const MAX_CHAR_VALUE = 256;\nconst EXTEND_SIZE = 10;\nconst MEM_SIZE = 300; // 300 cells\n\nexport { MAX_CHAR_VALUE, EXTEND_SIZE, MEM_SIZE };\n","export function jumpForward (program, _iptr) {\n  let iptr = _iptr, openBracketsCount = 1;\n\n  while (openBracketsCount > 0) {\n    switch (program[++iptr]) {\n      case '[':\n        openBracketsCount++;\n        break;\n      case ']':\n        openBracketsCount--;\n    }\n  }\n\n  return iptr;\n}\n\nexport function jumpBackward (program, _iptr) {\n  let iptr = _iptr, closeBracketsCount = 1;\n\n  while (closeBracketsCount > 0) {\n    switch (program[--iptr]) {\n      case ']':\n        closeBracketsCount++;\n        break;\n      case '[':\n        closeBracketsCount--;\n    }\n  }\n\n  return iptr;\n}\n","import now from 'performance-now';\nimport { MAX_CHAR_VALUE, EXTEND_SIZE, MEM_SIZE } from './constants/index';\nimport { jumpBackward, jumpForward } from './utils/jump';\n\nclass BrainFuck {\n  constructor (program, input) {\n    this.program = program;\n    this.memory = Array(MEM_SIZE).fill(0);\n    this.input = input || '';\n    this.output = '';\n    this.iptr = 0; // instruction pointer\n    this.mptr = 0; // memory pointer\n    this.infinite = false;\n    this.inputPtr = 0;\n  }\n\n  compile () {\n    if (!this.program) {\n      throw Error('nothing to compile');\n    }\n\n    const t1 = now();\n\n    while (this.iptr < this.program.length) {\n      if (now() - t1 > 20000) { // infinite detection, there might be a better way than this :)\n        this.infinite = true;\n        break;\n      }\n\n      switch (this.program[this.iptr]) {\n        case '>':\n          if (this.mptr >= this.memory.length - 1) {\n            this.memory = this.memory.concat(Array(EXTEND_SIZE).fill(0));\n          }\n\n          this.mptr++;\n          break;\n        case '<':\n          this.mptr = this.mptr - 1 < 0 ? this.mptr : this.mptr - 1;\n          break;\n        case '+':\n          this.memory[this.mptr] = (this.memory[this.mptr] + 1) % MAX_CHAR_VALUE;\n          break;\n        case '-':\n          let val = this.memory[this.mptr] - 1;\n\n          if (val < 0) {\n            val += MAX_CHAR_VALUE * (Math.ceil(-val / MAX_CHAR_VALUE))\n          }\n\n          this.memory[this.mptr] = val;\n          break;\n        case '.':\n          this.output += String.fromCharCode(this.memory[this.mptr]);\n          break;\n        case ',':\n          if (this.inputPtr < this.input.length) {\n            this.memory[this.mptr] = this.input.charCodeAt(this.inputPtr++);\n          }\n          break;\n        case '[':\n          if (!this.memory[this.mptr]) {\n            this.iptr = jumpForward(this.program, this.iptr);\n          }\n          break;\n        case ']':\n          if (this.memory[this.mptr]) {\n            this.iptr = jumpBackward(this.program, this.iptr);\n          }\n          break;\n      }\n\n      this.iptr++;\n    }\n\n    const t2 = now();\n\n    return {\n      program: this.program,\n      input: this.input,\n      output: this.output,\n      memory: this.memory,\n      compilationTime: t2 - t1,\n      infinite: this.infinite\n    };\n  }\n}\n\nmodule.exports = BrainFuck;\n"]}